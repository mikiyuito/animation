@charset 'UTF-8';
@use "sass:math";
@use "../../global" as *;

.c-text {
  $this: &;

  &.-primary {
    text-transform: uppercase;
  }

  //  Typing
  //--------------------------------------------

  &[data-animation="typing"] {
    width: 10em;
    margin: 0 auto;
    overflow: hidden; //1文字ずつ表示させるため
    animation-name: typing, typoCursor;
    animation-duration: 3s, 0.8s;
    animation-timing-function: steps(19, end), step-end; //animation-durationで指定した時間になるまで、そのコマ数分だけアニメーションを繰り返す。
    animation-iteration-count: 2, infinite; //繰り返す回数
    border-right: 1px solid $primary-border-color; //タイピングのカーソル用
    white-space: nowrap; //初期状態ではwidthが0になり、改行されるため改行できないようにする

    @keyframes typing {
      //0%
      from {
        width: 0;
      }

      //100%
      to {
        width: 10em;
      }
    }
  }

  @keyframes typoCursor {
    //0%,100%
    from,
    to {
      border-right-color: transparent;
    }

    //50%
    50% {
      border-right-color: $primary-border-color;
    }
  }

  //  Circle Loop
  //--------------------------------------------

  &[data-animation="circle:loop"] {
    $string-length: 13;
    position: relative;
    height: 150px;
    max-height: 150px;
    animation-name: circleLoop;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-direction: normal;

    & span {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }

    @keyframes circleLoop {
      //0%
      0% {
        transform: rotate(360deg);
      }

      //100%
      100% {
        transform: rotate(720deg);
      }
    }

    @for $i from 1 through $string-length {
      & #{$this}__char#{$i} {
        transform: rotate(math.div(360 * $i, $string-length) + deg);
      }
    }
  }

  //  Order Flow Down
  //--------------------------------------------

  &[data-animation="orderFlow:down"] {
    $string-length: 13;
    font-size: 1.25rem;
    font-weight: 700;

    & #{$this}__string {
      display: flex;
      align-items: center;
      overflow: hidden;
    }

    & #{$this}__char {
      transform: translateY(-100%);
      animation-name: orderFlowDown;
      animation-duration: 0.2s;
      animation-timing-function: ease-out;
      animation-iteration-count: 1;
      animation-fill-mode: forwards; // アニメーション実行後のスタイルを保持する
    }

    @for $i from 1 through $string-length {
      & #{$this}__char.-char#{$i} {
        animation-delay: 0.1 * $i + s;
      }
    }

    @keyframes orderFlowDown {
      //0%
      0% {
        transform: translateY(-100%);
        opacity: 0;
      }

      //100%
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
}
