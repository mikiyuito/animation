@charset 'UTF-8';
@use "sass:math";
@use "../../global" as *;

/*
  Button
*/
.c-button {
  $this: &;
  display: inline-block;
  border: 0;
  background-color: transparent;
  color: inherit;
  text-decoration: none;
  cursor: pointer;
  appearance: none;

  &.-primary {
    width: 100%;
    max-width: 220px;
    padding: pxToRem(24px) pxToRem(16px);
    border: 1px solid $primary-border-color;
    border-radius: 9999px;
    font-weight: 700;
  }

  &.-secondary {
    width: fit-content;
    padding: pxToRem(8px);
    font-size: 1.25rem;
    font-weight: 700;
  }

  //  Simple
  //--------------------------------------------

  &[data-animation="simple"] {
    transition-property: background-color, color, border-color;
    transition-duration: 0.3s;
    transition-timing-function: ease-in-out;

    @include hover() {
      border-color: currentcolor;
      background-color: $md-grey-900;
      color: $base-color;
    }
  }

  //  Slide right
  //--------------------------------------------
  &[data-animation="slide:right"] {
    position: relative;
    overflow: hidden;
    background-color: $base-color; //mix-blend-modeを有効にするため

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translateX(-102%); //100%だと枠線が見えている時がある
      transition-property: transform;
      transition-duration: 0.3s;
      transition-timing-function: ease-in-out;
      background-color: $main-color;
      will-change: transform;
    }

    @include hover() {
      &:before {
        transform: translateX(0);
      }
    }

    & #{$this}__text {
      mix-blend-mode: difference;
      color: $base-color; //mix-blend-modeを有効にするため
    }
  }

  //  Slide Left
  //--------------------------------------------
  &[data-animation="slide:left"] {
    position: relative;
    overflow: hidden;
    background-color: $base-color; //mix-blend-modeを有効にするため

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translateX(102%);
      transition-property: transform;
      transition-duration: 0.3s;
      transition-timing-function: ease-in-out;
      background-color: $main-color;
      will-change: transform;
    }

    @include hover() {
      &:before {
        transform: translateX(0);
      }
    }

    & #{$this}__text {
      mix-blend-mode: difference;
      color: $base-color; //mix-blend-modeを有効にするため
    }
  }

  //  Slide Down
  //--------------------------------------------
  &[data-animation="slide:down"] {
    position: relative;
    overflow: hidden;
    background-color: $base-color; //mix-blend-modeを有効にするため

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translateY(-102%);
      transition-property: transform;
      transition-duration: 0.3s;
      transition-timing-function: ease-in-out;
      background-color: $main-color;
      will-change: transform;
    }

    @include hover() {
      &:before {
        transform: translateY(0);
      }
    }

    & #{$this}__text {
      mix-blend-mode: difference;
      color: $base-color; //mix-blend-modeを有効にするため
    }
  }

  //  Slide Up
  //--------------------------------------------
  &[data-animation="slide:up"] {
    position: relative;
    overflow: hidden;
    background-color: $base-color; //mix-blend-modeを有効にするため

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translateY(102%);
      transition-property: transform;
      transition-duration: 0.3s;
      transition-timing-function: ease-in-out;
      background-color: $main-color;
      will-change: transform;
    }

    @include hover() {
      &:before {
        transform: translateY(0);
      }
    }

    & #{$this}__text {
      mix-blend-mode: difference;
      color: $base-color; //mix-blend-modeを有効にするため
    }
  }

  //  Offset
  //--------------------------------------------
  &[data-animation="offset"] {
    position: relative;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translate(1rem, 0.8rem);
      transition-property: transform;
      transition-duration: 0.3s;
      transition-timing-function: cubic-bezier(0.38, -0.39, 0, 0.79);
      border-radius: 9999px;
      background-color: #0000004d;
      will-change: transform;
    }

    @include hover() {
      &:before {
        transform: translate(0);
      }
    }

    & #{$this}__text {
      color: $main-color;
    }
  }

  // Arrow Slide Right
  //--------------------------------------------
  &[data-animation="arrowSlide:right"] {
    position: relative;
    overflow: hidden;
    transition-property: background-size;
    /* background-sizeのみ指定 */
    transition-duration: 0.5s;
    transition-timing-function: linear;
    background-color: $base-color; //mix-blend-modeを有効にするため
    background-image: linear-gradient(#000 0% 100%);
    background-repeat: no-repeat;
    background-size: 0 100%;
    background-position-x: right;

    // &:before,
    // &:after {
    //   content: "";
    //   position: absolute;
    //   top: 0;
    //   right: 0;
    //   bottom: 0;
    //   left: 0;
    //   background-color: $main-color;
    // }

    // &::before {
    //   transform: translateX(-102%);
    //   will-change: transform;
    // }

    // &::after {
    //   transform: translateX(102%);
    //   transition-property: transform;
    //   transition-duration: 0.3s;
    //   transition-timing-function: ease-in-out;
    //   will-change: transform, opacity;
    // }

    @include hover() {
      background-size: 100% 100%;
      background-position-x: left;
      // &:before {
      //   transform: translateX(0);
      //   transition: 0.3s;
      // }

      // &::after {
      //   transform: translateX(0);
      //   opacity: 0;
      // }
    }

    & #{$this}__text {
      position: relative;
      z-index: 1;
      mix-blend-mode: difference;
      color: $base-color; // ※黒と黒の場合、変化をもたらさない
    }
  }

  // Ripple
  //--------------------------------------------
  &[data-animation="ripple"] {
    will-change: box-shadow;

    @include hover() {
      animation-name: ripple;
      animation-duration: 1s;
      animation-timing-function: ease;
    }

    @keyframes ripple {
      0% {
        box-shadow: 0 0 0 0 $main-color;
      }

      100% {
        box-shadow: 0 0 0 2em transparent;
      }
    }
  }

  // Scan
  //--------------------------------------------

  &[data-animation="scan"] {
    // Transition
    //-----------------------------------------------------
    // 【解説】
    // hoverされたとき
    // ①background-sizeが.3sかけて100%になり、幅：100%、高さ:.1emの赤色直線ができる
    // ②.3s後にbackground-position-yが.3sかけて0%になる
    // hoverが離れたとき
    // ①background-position-yが.3sかけて100%になる
    // ②.3s後にbackground-sizeが.3sかけて0%になる
    //--------------------------------------------------
    transition-property: background-position-y, background-size;
    transition-duration: 0.3s; //アニメーションが完了するまでの時間
    transition-timing-function: linear; //アニメーションの変更速度
    transition-delay: var(--second, 0s), calc(0.3s - var(--second, 0s)); //アニメーションが始まるまでの待ち時間

    // Background
    //-----------------------------------------------------

    // 【解説】
    // background-imageの一つ目の値は、hover時のテキスト色用。
    // 2つ目の値は、hover時に出てくる直線用。
    // background-sizeで一つ目の値の高さを200%にすると、高さの0%から100%まで背景色が$youtube-colorになり、100%から200%までは#000になる。
    // background-position-yの一つ目の値はhoverされるまで100%の位置に移動。
    // 100%の位置に移動することで、テキストの色が黒背景色と同じになる。(background-clip:text;を指定しているため)
    // hoverされると0%の位置に戻るためテキストの色が$youtube-colorになる。
    // 参考→https://css-tricks.com/css-hover-effects-background-masks-3d/
    //--------------------------------------------------
    -webkit-background-clip: text, padding-box;
    background-clip: text, padding-box;
    background-image: linear-gradient(var(--color) 0% 50%, #000 50% 100%), linear-gradient(var(--color) 0% 100%);
    background-repeat: repeat, no-repeat;
    background-size: 100% 200%, var(--width, 0%) var(--height);
    background-position-x: 0%, 0%;
    background-position-y: calc(100% - var(--position-y, 0%)), var(--position-y, 0%);

    color: transparent;
    // background-clip:text;はcolorがtransparentかrgba(0,0,0,.5)みたいに透過させないと視覚効果がないため
    // 参考→https://developer.mozilla.org/ja/docs/Web/CSS/background-clip#:~:text=%E9%83%A8%E5%88%86%E7%9A%84%E3%81%AB-,%E4%B8%8D%E9%80%8F%E6%98%8E%E3%81%AA%E9%A0%98%E5%9F%9F%E3%81%8C%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E3%81%BF,-%E8%A6%96%E8%A6%9A%E5%8A%B9%E6%9E%9C%E3%81%8C
    --height: 0.1em;
    --color: #{$youtube-color};

    @include hover() {
      --width: 100%;
      --position-y: 100%;
      --second: 0.3s;
    }
  }

  // Repaint
  //--------------------------------------------

  &[data-animation="repaint"] {
    transition-property: background-position-x, background-size;
    transition-duration: 0.3s;
    transition-timing-function: linear;
    -webkit-background-clip: text, padding-box;
    background-clip: text, padding-box;

    background-image: linear-gradient(90deg, $twitter-color 0% 50%, #000 50% 100%),
      linear-gradient($twitter-color 0% 100%);
    background-repeat: repeat, no-repeat;
    background-size: 200% 100%, var(--width, 0%) var(--height);

    color: transparent;
    background-position-x: var(--position-x, 100%), 0%;
    background-position-y: 0%, 100%;
    --height: 0.2em;

    @include hover() {
      --width: 100%;
      --position-x: 0%;
    }
  }

  // Shape Hexagonal
  //--------------------------------------------

  &[data-animation="shape:hexagonal"] {
    position: relative;
    width: 150px;
    transition-property: clip-path;
    transition-duration: 0.3s;

    border: none;
    border-radius: 0;
    background-color: $twitter-color;
    // clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0 100%, 0% 100%, 0% 100%); 意図しない
    clip-path: polygon(
      0% 50%,
      0% 0%,
      100% 0%,
      100% 50%,
      100% 100%,
      0% 100%
    ); // 座標の数を揃える アニメーションの起点となる座標は変化前と変化後のどちらも同じ座標にする(0% 50%と100% 50%)

    &::before {
      content: "";
      position: absolute;
      z-index: -1;
      top: 5px;
      right: 5px;
      bottom: 5px;
      left: 5px;
      transition-property: clip-path;
      transition-duration: 0.3s;
      background-color: $base-color;
      // clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0 100%, 0% 100%, 0% 100%);
      clip-path: polygon(
        0% 50%,
        0% 0%,
        100% 0%,
        100% 50%,
        100% 100%,
        0% 100%
      ); // 座標の数を揃える  アニメーションの起点となる座標は変化前と変化後のどちらも同じ座標にする(0% 50%と100% 50%)
    }

    @include hover() {
      clip-path: polygon(0% 50%, 20% 0%, 80% 0%, 100% 50%, 80% 100%, 20% 100%); // 座標の数を揃える

      &::before {
        clip-path: polygon(0% 50%, 20% 0%, 80% 0%, 100% 50%, 80% 100%, 20% 100%); // 座標の数を揃える
      }
    }
  }

  // Shape Cross
  //--------------------------------------------

  &[data-animation="shape:cross"] {
    width: 100%;
    max-width: 200px;
    padding: pxToRem(24px) pxToRem(16px);
    transition-property: clip-path;
    transition-duration: 0.3s;
    transition-timing-function: ease-in;
    background-color: $youtube-color;
    color: $base-color;
    clip-path: polygon(
      0% 50%,
      0% 0%,
      30% 0%,
      50% 0%,
      70% 0%,
      100% 0%,
      100% 50%,
      100% 100%,
      70% 100%,
      50% 100%,
      30% 100%,
      0% 100%
    );

    @include hover() {
      clip-path: polygon(
        30% 50%,
        0% 0%,
        30% 0%,
        50% 30%,
        70% 0%,
        100% 0%,
        70% 50%,
        100% 100%,
        70% 100%,
        50% 70%,
        30% 100%,
        0% 100%
      );
    }
  }

  // Rubber
  //--------------------------------------------
  &[data-animation="rubber"] {
    @include hover() {
      animation-name: rubber;
      animation-duration: 1s;
    }

    @keyframes rubber {
      //幅拡大、高さ縮小を交互に行う
      30% {
        transform: scale(1.3, 0.7); //幅拡大、高さ縮小
      }

      40% {
        transform: scale(0.7, 1.25); //幅縮小、高さ拡大
      }

      50% {
        transform: scale(1.1, 0.8); //幅拡大、高さ縮小
      }

      65% {
        transform: scale(0.95, 1.05); //幅縮小、高さ拡大
      }

      75% {
        transform: scale(1.05, 0.95); //幅拡大、高さ縮小
      }
    }
  }

  // Collision
  //--------------------------------------------
  &[data-animation="collision"] {
    position: relative;
    overflow: hidden;

    background-color: $base-color;

    & #{$this}__text {
      display: inline-block;
      position: relative;
      z-index: 1;
      color: $base-color;
      mix-blend-mode: difference;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      width: 1em;
      height: 1em;
      margin: auto 0;
      transform: translateX(-50%);
      transition-property: left, transform;
      transition-duration: 0.5s;
      transition-delay: 0.5s, 0s;
      border-radius: 9999px;
      background-color: $main-color;
    }

    &::before {
      z-index: 1;
      left: -5%;
    }

    &::after {
      z-index: 0;
      left: 105%;
    }

    @include hover() {
      &:before,
      &:after {
        left: 50%;
        transform: scale(20);
        transition-duration: 0.5s;
        transition-delay: 0s, 0.5s;
      }
    }
  }

  // Circle Stretch
  //--------------------------------------------

  &[data-animation="circle:stretch"] {
    position: relative;
    border: none;
    background-color: $base-color;

    & #{$this}__circle {
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: 2em;
      height: 2em;
      margin: auto 0;
      transition-property: width;
      transition-duration: 0.5s;
      border-radius: 9999px;
      background-color: $main-color;
    }

    & #{$this}__arrow {
      display: block;
      position: absolute;
      top: 1px;
      bottom: 0;
      width: 2em;
      height: 2px;
      margin: auto 0;
      transition-property: width, transform, background-color;
      transition-duration: 0.1s;
      background-color: transparent;

      &::before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: -0.3em;
        width: 0.8em;
        height: 0.8em;
        margin: auto;
        transform: rotate(45deg);
        transition-property: transform;
        transition-duration: 0.5s;
        border-top: 2px solid $base-color;
        border-right: 2px solid $base-color;
      }
    }

    & #{$this}__text {
      display: inline-block;
      position: relative;
      z-index: 1;
      mix-blend-mode: difference;
      color: $base-color;
    }

    @include hover() {
      & #{$this}__circle {
        width: 100%;
      }

      & #{$this}__arrow {
        transform: translateX(0.5em);
        transition-duration: 0.5s;
        transition-delay: 0s, 0s, 0.1s;
        background-color: $base-color;

        &::before {
          transform: translateX(0.8em) rotate(45deg);
        }
      }
    }
  }

  // Slide Arrow
  //--------------------------------------------
  &[data-animation="slide:arrow"] {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    padding-right: 1.5rem;
    padding-left: 0;
    transition-property: background-color;
    transition-duration: 0.3s;

    & #{$this}__text {
      transition-property: color;
      transition-duration: 0.3s;
    }

    & #{$this}__circle {
      display: flex;
      position: absolute;
      top: 0;
      right: 1.5rem;
      bottom: 0;
      align-items: center;
      justify-content: center;
      width: 2rem;
      height: 2rem;
      margin: auto 0;
      overflow: hidden;
      transition-property: background-color, border-color;
      transition-duration: 0.3s;
      border: 1px solid transparent;
      border-radius: 50%;
      background-color: $main-color;
    }

    & #{$this}__arrow {
      display: inline-block;
      transition-property: color;
      transition-duration: 0.3s;
      color: #fff;
    }

    @keyframes slideArrow {
      // 0% {
      //   初期位置
      //   transform: translateX(0);
      //   opacity: 1;
      // }

      50% {
        //透明になりながら、右に移動
        transform: translateX(100%);
        opacity: 0;
      }

      55% {
        //透明のまま左に移動
        transform: translateX(-100%);
        opacity: 0;
      }

      // 100% {
      //不透明になりながら、左に移動(初期位置に戻る)
      //   transform: translateX(0);
      //   opacity: 1;
      // }
    }

    @include hover() {
      background-color: #000;

      & #{$this}__text {
        color: #fff;
      }

      & #{$this}__circle {
        border-color: #000;
        background-color: #fff;
      }

      & #{$this}__arrow {
        animation-name: slideArrow;
        animation-duration: 0.3s;
        color: #000;
      }
    }
  }
}
